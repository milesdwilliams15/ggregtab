% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggregtab.R
\name{ggregtab}
\alias{ggregtab}
\title{Create a regression table as an image}
\usage{
ggregtab(
  coef_tbl,
  show = "se",
  single = F,
  digits = 3,
  ratio = 1/5,
  base_family = "sans"
)
}
\arguments{
\item{coef_tbl}{A coefficient test tibble produced with \code{tidy_coeftest()} or by some other means. To work, the tibble must contain the following columns: \code{term}, \code{estimate}, \code{std.error}, \code{statistic}, \code{p.value}, \code{conf.low}, \code{conf.high}, \code{model}, and \code{N}.}

\item{show}{Can be one of \code{"se"} (default), \code{"stat"}, or \code{"ci"}. This controls whether coefficient standard errors, test statistics, or confidence intervals are shown.}

\item{single}{Logical. If \code{TRUE}, then the coefficient with its standard error, statistic, or confidence intervals are shown in a single line. If \code{FALSE} (default), then the relevant statistic is shown below the coefficent.}

\item{digits}{An integer indicating the number of significant digits to show. Set to \code{3} by default.}

\item{ratio}{Controls the height to width ratio of the table. Set to \code{1/5} by default.}

\item{base_family}{Controls the font family of the plot. Set to \code{"sans"} by default.}
}
\value{
A \code{{ggplot2}} object.
}
\description{
\code{ggregtab()} uses \code{{ggplot2}} under the hood to create a
regression table for one or more models as an image.
}
\examples{
# Fit some regression models
fit1 <- lm(mpg ~ hp + wt, mtcars)
fit2 <- lm(mpg ~ hp + wt + cyl, mtcars)

# Prep for visualization
tidy_fit1 <- tidy_coeftest(fit1, model = "Model 1")
tidy_fit2 <- tidy_coeftest(fit2, model = "Model 2")
tidy_fits <- dplyr::bind_rows(tidy_fit1, tidy_fit2)

# Plot the regression table
ggregtab(tidy_fits) +
  labs(
    title = "A Regression Table",
    subtitle = "It shows OLS estimates" 
  )
}
